<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.02.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
"
    >



<context:component-scan base-package="com.bbf.spring.taskExcutor"/>

<!-- 异步线程池 -->
<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
  <!-- 核心线程数  -->
  <property name="corePoolSize" value="40" />
  <!-- 最大线程数 -->
  <property name="maxPoolSize" value="50" />
  <!-- 队列最大长度 >=mainExecutor.maxSize -->
  <property name="queueCapacity" value="1000" />
  <!-- 线程池维护线程所允许的空闲时间 -->
  <property name="keepAliveSeconds" value="300" />
  <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
  <property name="rejectedExecutionHandler">
    <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
  </property>
  
   <property name="WaitForTasksToCompleteOnShutdown" value="true" /> 
</bean>


<!-- db --> 
<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		 <!-- 池启动时创建的连接数量 -->
        <property name="initialSize" value="5"/>
        <!-- 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。 -->
        <property name="maxActive" value="30"/>
        <!-- 池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
        <property name="maxIdle" value="20"/>
        <!-- 在不新建连接的条件下，池中保持空闲的最少连接数。 -->
        <property name="minIdle" value="3"/>
        <!-- 设置自动回收超时连接 -->  
        <property name="removeAbandoned" value="true" />
        <!-- 自动回收超时时间(以秒数为单位) -->  
        <property name="removeAbandonedTimeout" value="200"/>
        <!-- 设置在自动回收超时连接的时候打印连接的超时错误  --> 
        <property name="logAbandoned" value="true"/>
        <!-- 等待超时以毫秒为单位，在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。  -->  
        <property name="maxWait" value="100"/>  
	</bean>
	
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

        <!--
    <property name="filters" value="stat" />
        -->

    <property name="maxActive" value="100" />
    <property name="initialSize" value="10" />
    <property name="maxWait" value="10000" />
    <property name="minIdle" value="10" />

    <property name="timeBetweenEvictionRunsMillis" value="3000" />
    <property name="minEvictableIdleTimeMillis" value="300000" />

    <property name="validationQuery" value="SELECT 'x'" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
</bean>
    
 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
 <tx:annotation-driven transaction-manager="transactionManager" />
 
 	 <!-- 使用xml配置事务 begin-->
 	  <!--
     <aop:config>
         <aop:pointcut id="transactionPointcut" expression="execution(* com.b510.service..*.*(..))" />
         <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
     </aop:config>
     <tx:advice id="txAdvice" transaction-manager="txManager">
         <tx:attributes>
             <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
             <tx:method name="*" />
         </tx:attributes>
     </tx:advice>
     -->
     <!-- 使用xml配置事务  end -->
     
 
 <!-- 配置业务bean：PersonServiceBean -->
     <bean id="logBeanService" class="com.bbf.trace.service.impl.LogBeanServiceImpl">
         <!-- 向属性dataSource注入数据源 -->
         <property name="dataSource" ref="dataSource"></property>
     </bean>
     
</beans>